@model TWeb.Models.ViewModels.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<div class="row justify-content-center">
    <div class="col-md-5">
        <div class="card shadow">
            <div class="card-body p-4">
                <h1 class="text-center mb-4 fw-bold">Welcome Back</h1>
                <p class="text-center text-muted mb-4 fs-6">Sign in to your TWeb account</p>

                <form asp-action="Login" method="post" id="loginForm" novalidate>
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    <div class="mb-3">
                        <label asp-for="UserName" class="form-label fw-semibold">Username <span class="text-danger">*</span></label>
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-user"></i></span>
                            <input asp-for="UserName" class="form-control" placeholder="Enter your username" required aria-describedby="usernameHelp" />
                            <div class="invalid-feedback" aria-live="polite">
                                <span asp-validation-for="UserName"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Password" class="form-label fw-semibold">Password <span class="text-danger">*</span></label>
                        <div class="input-group has-validation">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input asp-for="Password" type="password" class="form-control" placeholder="Enter your password" required aria-describedby="passwordHelp" />
                            <button type="button" class="btn btn-outline-secondary" id="togglePassword" aria-label="Toggle password visibility">
                                <i class="fas fa-eye"></i>
                            </button>
                            <div class="invalid-feedback" aria-live="polite">
                                <span asp-validation-for="Password"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3 form-check">
                        <input asp-for="RememberMe" class="form-check-input" id="rememberMe" />
                        <label asp-for="RememberMe" class="form-check-label" for="rememberMe">
                            Remember me on this device
                        </label>
                    </div>

                    <div class="d-grid mb-3">
                        <button type="submit" class="btn btn-primary btn-lg">
                            <i class="fas fa-sign-in-alt me-2"></i> Sign In
                        </button>
                    </div>

                    <p class="text-center mb-0 small">
                        Don't have an account?
                        <a asp-action="Register" class="text-decoration-none fw-semibold">Create one here</a>
                    </p>
                </form>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Add Font Awesome if not already loaded
        if (!document.querySelector('link[href*="font-awesome"]')) {
            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css';
            document.head.appendChild(link);
        }
        
        // Toggle password visibility
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.querySelector('input[name="Password"]');
            const icon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
        
        // Form submission with loading state
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.classList.add('loading');
            submitBtn.disabled = true;
            
            // Re-enable button after 10 seconds as fallback
            setTimeout(() => {
                submitBtn.classList.remove('loading');
                submitBtn.disabled = false;
            }, 10000);
        });
    </script>
}
