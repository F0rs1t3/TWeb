<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TWeb</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/TWeb.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="fas fa-car"></i> CarLux
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Cars" asp-action="Buy">Buy Cars</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Cars" asp-action="Rental">Rent Cars</a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    My Cars
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" asp-controller="Cars" asp-action="Create">List a Car</a></li>
                                    <li><a class="dropdown-item" asp-controller="Cars" asp-action="MyListings">My Listings</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="Cars" asp-action="MyRentals">My Rentals</a></li>
                                    <li><a class="dropdown-item" asp-controller="Cars" asp-action="RentalRequests">Rental Requests</a></li>
                                    @* <li><hr class="dropdown-divider"></li> *@
                                    @* <li><a class="dropdown-item" asp-controller="Profile" asp-action="Index">Profile</a></li> *@
                                </ul>
                                
                            </li>
                            @if (User.IsInRole("Admin"))
                {
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("AdminManage", "Cars")">Admin Manage</a>
                    </li>
                }
                        }
                    </ul>
                    
                    @if (User.Identity.IsAuthenticated)
                    {
                        <ul class="navbar-nav">
                            <!-- Chat Notifications -->
                            <li class="nav-item dropdown">
                                <a class="nav-link position-relative" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" id="chatDropdown">
                                    <i class="fas fa-comments"></i>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-primary d-none" id="chatBadge">
                                        0
                                    </span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" style="width: 300px;">
                                    <li><h6 class="dropdown-header">Recent Chats</h6></li>
                                    <li><div id="recentChats" class="px-3 py-2">Loading...</div></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-center" asp-controller="Chat" asp-action="Index">View All Chats</a></li>
                                </ul>
                            </li>
                            
                            <!-- Notifications -->
                            <li class="nav-item dropdown">
                                <a class="nav-link position-relative" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false" id="notificationDropdown">
                                    <i class="fas fa-bell"></i>
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger d-none" id="notificationBadge">
                                        0
                                    </span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" style="width: 350px;">
                                    <li><h6 class="dropdown-header">Recent Notifications</h6></li>
                                    <li><div id="recentNotifications" class="px-3 py-2" style="max-height: 400px; overflow-y: auto;">Loading...</div></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item text-center" asp-controller="Notification" asp-action="Index">View All Notifications</a></li>
                                </ul>
                            </li>
                            
                            <!-- User Menu -->
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown">
                                    @User.Identity.Name
                                </a>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" asp-controller="Profile" asp-action="Index">Profile</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" method="post">
                                            <button type="submit" class="dropdown-item">Logout</button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/Account/Register">Register</a>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>
    
    <div class="container">
        <main role="main" class="pb-3">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - TWeb - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    
    @if (User.Identity.IsAuthenticated)
    {
        <script>
            // Notification and Chat polling
            let notificationPollingInterval;
            let chatPollingInterval;
            
            async function updateNotifications() {
                try {
                    const response = await fetch('/Notification/GetRecent');
                    const data = await response.json();
                    
                    // Update notification badge
                    const notificationBadge = document.getElementById('notificationBadge');
                    if (data.unreadCount > 0) {
                        notificationBadge.textContent = data.unreadCount;
                        notificationBadge.classList.remove('d-none');
                    } else {
                        notificationBadge.classList.add('d-none');
                    }
                    
                    // Update notification dropdown
                    const recentNotifications = document.getElementById('recentNotifications');
                    if (data.notifications && data.notifications.length > 0) {
                        recentNotifications.innerHTML = data.notifications.map(n => `
                            <div class="notification-item mb-2 p-2 ${n.isRead ? '' : 'bg-light'} rounded">
                                <div class="d-flex align-items-start">
                                    <i class="fas ${getNotificationIcon(n.type)} me-2 mt-1"></i>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1 small">${n.title}</h6>
                                        <p class="mb-1 small text-muted">${n.message}</p>
                                        <small class="text-muted">${n.createdAt}</small>
                                    </div>
                                    ${n.actionUrl ? `<a href="${n.actionUrl}" class="btn btn-sm btn-outline-primary ms-2">View</a>` : ''}
                                </div>
                            </div>
                        `).join('');
                    } else {
                        recentNotifications.innerHTML = '<p class="text-muted small">No notifications</p>';
                    }
                } catch (error) {
                    console.error('Error updating notifications:', error);
                }
            }
            
            async function updateChatCount() {
                try {
                    const response = await fetch('/Chat/UnreadCount');
                    const data = await response.json();
                    
                    // Update chat badge
                    const chatBadge = document.getElementById('chatBadge');
                    if (data.count > 0) {
                        chatBadge.textContent = data.count;
                        chatBadge.classList.remove('d-none');
                    } else {
                        chatBadge.classList.add('d-none');
                    }
                } catch (error) {
                    console.error('Error updating chat count:', error);
                }
            }
            
            function getNotificationIcon(type) {
                switch(type) {
                    case 'NewMessage': return 'fa-comment';
                    case 'NewChatRequest': return 'fa-comments';
                    case 'RentalRequest': return 'fa-calendar-alt';
                    case 'RentalConfirmed': return 'fa-check-circle';
                    case 'RentalCancelled': return 'fa-times-circle';
                    default: return 'fa-bell';
                }
            }
            
            // Initialize polling when page loads
            document.addEventListener('DOMContentLoaded', function() {
                // Initial load
                updateNotifications();
                updateChatCount();
                
                // Poll every 30 seconds
                notificationPollingInterval = setInterval(updateNotifications, 30000);
                chatPollingInterval = setInterval(updateChatCount, 30000);
                
                // Update when dropdown is opened
                document.getElementById('notificationDropdown').addEventListener('click', updateNotifications);
                document.getElementById('chatDropdown').addEventListener('click', updateChatCount);
            });
            
            // Clean up intervals when page unloads
            window.addEventListener('beforeunload', function() {
                if (notificationPollingInterval) clearInterval(notificationPollingInterval);
                if (chatPollingInterval) clearInterval(chatPollingInterval);
            });
        </script>
    }
    
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
