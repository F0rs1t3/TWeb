@model TWeb.Models.ViewModels.CreateCarViewModel

@{
    ViewData["Title"] = "Add New Car";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="form-container">
            <h1 class="text-center mb-4">@ViewData["Title"]</h1>
            
            <form asp-action="Create" method="post" enctype="multipart/form-data" id="createCarForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Brand" class="form-label">Brand *</label>
                            <input asp-for="Brand" class="form-control" placeholder="e.g., Toyota, BMW, Ford" required />
                            <span asp-validation-for="Brand" class="invalid-feedback"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Model" class="form-label">Model *</label>
                            <input asp-for="Model" class="form-control" placeholder="e.g., Camry, X5, Focus" required />
                            <span asp-validation-for="Model" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Year" class="form-label">Year *</label>
                            <input asp-for="Year" type="number" class="form-control" min="1900" max="2030" required />
                            <span asp-validation-for="Year" class="invalid-feedback"></span>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="form-group">
                            <label asp-for="Mileage" class="form-label">Mileage (km) *</label>
                            <input asp-for="Mileage" type="number" class="form-control" min="0" placeholder="0" required />
                            <span asp-validation-for="Mileage" class="invalid-feedback"></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label asp-for="Photo" class="form-label">Car Photo</label>
                    <input asp-for="Photo" type="file" class="form-control" accept="image/*" id="photoInput" />
                    <span asp-validation-for="Photo" class="invalid-feedback"></span>
                    <small class="form-text text-muted">
                        Supported formats: JPG, PNG, GIF. Maximum size: 5MB.
                    </small>
                </div>
                
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary btn-lg me-3">
                        <i class="fas fa-plus"></i> Add Car
                    </button>
                    <a asp-action="Index" class="btn btn-secondary btn-lg">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Add Font Awesome if not already loaded
        if (!document.querySelector('link[href*="font-awesome"]')) {
            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css';
            document.head.appendChild(link);
        }
        
        // Form submission with loading state
        document.getElementById('createCarForm').addEventListener('submit', function(e) {
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.classList.add('loading');
            submitBtn.disabled = true;
            
            // Re-enable button after 5 seconds as fallback
            setTimeout(() => {
                submitBtn.classList.remove('loading');
                submitBtn.disabled = false;
            }, 5000);
        });
        
        // Set current year as default
        const yearInput = document.querySelector('input[name="Year"]');
        if (yearInput && !yearInput.value) {
            yearInput.value = new Date().getFullYear();
        }
    </script>
}